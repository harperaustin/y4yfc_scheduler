{"ast":null,"code":"var _jsxFileName = \"/Users/harperaustin/Desktop/y4yfc_scheduler/frontend/src/playerSchedule.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles.css';\nimport Calendar from \"./calendar\";\nimport { usePlayerInfo, setPlayerInfo } from './playerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerSchedule({\n  onBack,\n  onSubmit\n}) {\n  _s();\n  const {\n    playerInfo,\n    setPlayerInfo\n  } = usePlayerInfo();\n  const convertAvailabilitytoString = availabilityMap => {\n    // helper function to parse the date\n    const parseDate = formattedDate => {\n      const [day, date] = formattedDate.split(\" \");\n      const [month, dayOfMonth] = date.split(\"/\").map(Number);\n      const year = new Date().getFullYear();\n      return new Date(year, month - 1, dayOfMonth);\n    };\n    const sortedDates = Object.keys(availabilityMap).sort((a, b) => {\n      return parseDate(a) - parseDate(b);\n    });\n    const availabilityString = sortedDates.map(date => `${date}: ${availabilityMap[date].join(\", \")}`).join(\"\\n\");\n    return availabilityString;\n  };\n  const formatSubmissionDate = date => {\n    const timeFormatter = new Intl.DateTimeFormat(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n    const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    });\n    const time = timeFormatter.format(date);\n    const formattedDate = dateFormatter.format(date);\n    return `${time}, ${formattedDate}`;\n  };\n  const handleSubmit = async () => {\n    console.log(playerInfo);\n    const rows = [[playerInfo.name, playerInfo.age, playerInfo.location, playerInfo.sessionType, formatSubmissionDate(new Date()), convertAvailabilitytoString(playerInfo.availability)]];\n    try {\n      const response = await fetch('http://localhost:3001/write-to-sheet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          values: rows\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Data written to Google Sheets:', result);\n        //alert('Player information submitted successfully!');\n      } else {\n        console.error('Failed to write data:', await response.text());\n        alert('Failed to submit player information.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while submitting the player information.');\n    }\n    ;\n    if (onSubmit) {\n      onSubmit(playerInfo);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonHolder\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bButton\",\n        onClick: onBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitButton\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pSched\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pSchedText\",\n        children: \"Player Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pSchedSubText\",\n        children: \"Click or drag over time slots to indicate your availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calDiv\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        setPlayerInfo: setPlayerInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extraSpacing\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(PlayerSchedule, \"T5k2CJSXSU/1lhc+Ld3BloyvE1c=\", false, function () {\n  return [usePlayerInfo];\n});\n_c = PlayerSchedule;\nexport default PlayerSchedule;\nvar _c;\n$RefreshReg$(_c, \"PlayerSchedule\");","map":{"version":3,"names":["React","Calendar","usePlayerInfo","setPlayerInfo","jsxDEV","_jsxDEV","PlayerSchedule","onBack","onSubmit","_s","playerInfo","convertAvailabilitytoString","availabilityMap","parseDate","formattedDate","day","date","split","month","dayOfMonth","map","Number","year","Date","getFullYear","sortedDates","Object","keys","sort","a","b","availabilityString","join","formatSubmissionDate","timeFormatter","Intl","DateTimeFormat","hour","minute","hour12","dateFormatter","time","format","handleSubmit","console","log","rows","name","age","location","sessionType","availability","response","fetch","method","headers","body","JSON","stringify","values","ok","result","json","error","text","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harperaustin/Desktop/y4yfc_scheduler/frontend/src/playerSchedule.js"],"sourcesContent":["import React from 'react';\nimport './styles.css';\nimport Calendar from \"./calendar\";\nimport { usePlayerInfo, setPlayerInfo} from './playerContext';\n\n\n\nfunction PlayerSchedule( {onBack, onSubmit} ){\n    const {playerInfo, setPlayerInfo} = usePlayerInfo();\n\n    const convertAvailabilitytoString = (availabilityMap) => {\n        // helper function to parse the date\n        const parseDate = (formattedDate) =>  {\n            const [day, date] = formattedDate.split(\" \");\n            const [month, dayOfMonth] = date.split(\"/\").map(Number);\n            const year = new Date().getFullYear();\n            return new Date(year, month - 1, dayOfMonth);\n        }\n\n        const sortedDates = Object.keys(availabilityMap).sort((a,b) => {\n            return parseDate(a) - parseDate(b);\n        });\n\n        const availabilityString = sortedDates.map((date)=> `${date}: ${availabilityMap[date].join(\", \")}`).join(\"\\n\");\n\n        return availabilityString;\n        \n    }\n\n    const formatSubmissionDate = (date) =>{\n        const timeFormatter = new Intl.DateTimeFormat(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true\n        });\n    \n        const dateFormatter = new Intl.DateTimeFormat(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\"\n        });\n    \n        const time = timeFormatter.format(date);\n        const formattedDate = dateFormatter.format(date);\n    \n        return `${time}, ${formattedDate}`;\n    };\n\n    const handleSubmit = async () => {\n        console.log(playerInfo)\n\n\n        const rows = [\n            [\n                playerInfo.name,\n                playerInfo.age,\n                playerInfo.location,\n                playerInfo.sessionType,\n                formatSubmissionDate(new Date()),\n                convertAvailabilitytoString(playerInfo.availability),\n            ],\n        ];\n\n        try {\n            const response = await fetch('http://localhost:3001/write-to-sheet', {\n                method: 'POST',\n                headers: {'Content-Type' : 'application/json'},\n                body: JSON.stringify({values: rows})\n\n            });\n\n            if (response.ok){\n                const result = await response.json();\n                console.log('Data written to Google Sheets:', result);\n                //alert('Player information submitted successfully!');\n            } else {\n                console.error('Failed to write data:', await response.text());\n                alert('Failed to submit player information.');\n            }\n        } catch(error){\n            console.error('Error:', error);\n            alert('An error occurred while submitting the player information.');\n        };\n\n        if(onSubmit){\n            onSubmit(playerInfo);\n        }\n    }\n    \n    \n    return (\n\n\n        <div className='schedDiv'>\n            <div className='buttonHolder'>\n                <button className='bButton' onClick={onBack}>Back</button>\n                <button className='submitButton' onClick={handleSubmit}>Submit</button>\n            </div>\n            <div className='pSched'>\n                <h1 className='pSchedText'>Player Schedule</h1>\n                <h2 className='pSchedSubText'>Click or drag over time slots to indicate your availability</h2>\n            </div>\n            <div className='calDiv'>\n                <Calendar setPlayerInfo={setPlayerInfo}/>\n            </div>\n            <div className='extraSpacing'> </div>\n        </div>\n\n    );\n}\n\nexport default PlayerSchedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}